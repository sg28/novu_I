import { NextApiResponse } from 'next';
import { NextRequest } from 'next/server';
import { w as SupportedFrameworkName, c as ServeHandlerOptions } from '../handler-_mH7Q42O.js';
import '@novu/shared';
import 'json-schema-to-ts';
import 'zod';

declare const frameworkName: SupportedFrameworkName;
/**
 * In Next.js, serve and register any declared workflows with Novu, making
 * them available to be triggered by events.
 *
 * Supports Next.js 12+, both serverless and edge.
 *
 * @example Next.js <=12 or the pages router can export the handler directly
 * ```ts
 * import { serve } from "@novu/framework/next";
 * import { myWorkflow } from "./src/novu/workflows"; // Your workflows
 *
 * export default serve({ workflows: [myWorkflow] });
 * ```
 *
 * @example Next.js >=13 with the `app` dir must export individual methods
 * ```ts
 * import { serve } from "@novu/framework/next";
 * import { myWorkflow } from "./src/novu/workflows";
 *
 * export const { GET, POST, OPTIONS } = serve({ workflows: [myWorkflow] });
 * ```
 */
declare const serve: (options: ServeHandlerOptions) => ((expectedReq: NextRequest, res: NextApiResponse) => Promise<Response>) & {
    GET: (expectedReq: NextRequest, res: NextApiResponse) => Promise<Response>;
    POST: (expectedReq: NextRequest, res: NextApiResponse) => Promise<Response>;
    OPTIONS: (expectedReq: NextRequest, res: NextApiResponse) => Promise<Response>;
};

export { frameworkName, serve };
