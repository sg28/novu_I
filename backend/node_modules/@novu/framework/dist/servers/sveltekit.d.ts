import { RequestEvent } from '@sveltejs/kit';
import { w as SupportedFrameworkName, c as ServeHandlerOptions } from '../handler-_mH7Q42O.js';
import '@novu/shared';
import 'json-schema-to-ts';
import 'zod';

declare const frameworkName: SupportedFrameworkName;
/**
 * Using SvelteKit, serve and register any declared workflows with Novu,
 * making them available to be triggered by events.
 *
 * @example
 * ```ts
 * // app/routes/api/novu/+server.ts
 * import { serve } from "@novu/framework/sveltekit";
 * import { myWorkflow } from "./src/novu/workflows"; // Your workflows
 *
 * const handler = serve({ workflows: [myWorkflow] });
 *
 * export { handler as action, handler as loader };
 * ```
 */
declare const serve: (options: ServeHandlerOptions) => ((event: RequestEvent) => Promise<Response>) & {
    GET: (event: RequestEvent) => Promise<Response>;
    POST: (event: RequestEvent) => Promise<Response>;
    OPTIONS: (event: RequestEvent) => Promise<Response>;
};

export { frameworkName, serve };
